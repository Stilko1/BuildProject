@using BuildMaterialsApp.Models.ShoppingCart
@model List<ShoppingCartItemIndexVM>

@{
    ViewData["Title"] = "Shopping Cart";
}

<h2>Shopping Cart</h2>

@if (Model.Count == 0)
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Picture</th>
                <th>Price</th>
                <th>Discount</th>
                <th>Quantity</th>
                <th>Total Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ProductName</td>
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.Picture)" width="100" />
                    </td>
                    <td>@item.Price</td>
                    <td>@item.Discount %</td>
                    <td>@item.Quantity</td>
                    <td>@item.TotalPrice.ToString("F2")</td>
                    <td>
                        <a asp-action="Edit" asp-controller="Order" asp-route-productId="@item.ProductId" class="btn btn-warning">Edit</a>
                        <a asp-action="RemoveFromCart" asp-controller="ShoppingCart" asp-route-productId="@item.ProductId" class="btn btn-danger">Remove</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <tr>
        <td colspan="3" class="text-end"><strong>Total sum of all products:</strong></td>
        <td><strong>@ViewBag.TotalPrice.ToString("F2") lv.</strong></td>
    </tr>

    <br />
    <br />

    <a asp-action="Index" asp-controller="Product" class="btn btn-dark">Continue shopping</a>
    <a asp-action="ClearCart" asp-controller="ShoppingCart" class="btn btn-warning">Clear Cart</a>
    <a asp-action="ConfirmOrder" asp-controller="ShoppingCart" class="btn btn-primary">Confirm Order</a>
}

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}